{
  "Comment": "A workflow to retrieve items from DynamoDB and trigger CodeBuild projects in parallel",
  "StartAt": "AssignTotalWaves",
  "States": {
    "AssignTotalWaves": {
      "Type": "Pass",
      "Next": "Iterator",
      "Result": {
        "total_waves": "2",
        "index": 0,
        "step": 1
      },
      "ResultPath": "$.iterator"
    },
    "Iterator": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${ITERATOR_LAMBDA_ARN}:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "All Waves Deployed?"
    },
    "All Waves Deployed?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.iterator.continue",
          "BooleanEquals": true,
          "Next": "RetrieveData"
        }
      ],
      "Default": "Deployment Complete"
    },
    "RetrieveData": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:scan",
      "Parameters": {
        "TableName": "${TENANT_MAPPING_TABLE}",
        "FilterExpression": "waveNumber = :waveNumberValue",
        "ExpressionAttributeValues": {
          ":waveNumberValue": {
            "S.$": "$.iterator.indexString"
          }
        }
      },
      "ResultPath": "$.DynamoDBData",
      "Next": "ProcessItems"
    },
    "ProcessItems": {
      "Type": "Map",
      "InputPath": "$.DynamoDBData.Items",
      "ItemsPath": "$",
      "MaxConcurrency": 10,
      "Iterator": {
        "StartAt": "StartCodeBuild",
        "States": {
          "StartCodeBuild": {
            "Type": "Task",
            "Resource": "arn:aws:states:::codebuild:startBuild",
            "Parameters": {
              "ProjectName": "${CODE_BUILD_PROJECT_NAME}",
              "EnvironmentVariablesOverride": [
                {
                  "Name": "STACK_NAME",
                  "Value.$": "$.stackName.S"
                }
              ]
            },
            "ResultPath": "$.codeBuildResult",
            "End": true
          }
        }
      },
      "ResultPath": "$.processItemsResult",
      "OutputPath": "$.iterator",
      "Next": "FormatOutput"
    },
    "FormatOutput": {
      "Type": "Pass",
      "Parameters": {
        "iterator": {
          "index.$": "$.index",
          "step.$": "$.step",
          "total_waves.$": "$.total_waves"
        }
      },
      "OutputPath": "$",
      "Next": "Iterator"
    },
    "Deployment Complete": {
      "Type": "Pass",
      "End": true
    }
  }
}